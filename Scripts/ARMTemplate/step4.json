{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "CompanyID": {
            "type": "string",
            "metadata": {
                "description": "numeric identification of company"
            }
        },
        "VMPassword": {
            "type": "securestring",
            "metadata": {
                "description": "password of administrator VM"
            }
        }
    },
    "variables": {
        "CompanyID": "[parameters('CompanyID')]",
        "ResourceGroup": "[resourceGroup().name]", // "[concat('Company', padleft(variables('CompanyID'), 2, '0') )]",
        "location": "[resourceGroup().location]",
        "ERCircuitName": "[concat(variables('ResourceGroup'),'-er')]",
        "VNetName": "Hub01-VNet01",
        "subnetName": "Tenant",
        "VMName": "Hub01-VM01",
        "VMUserName": "[concat('Company', variables('CompanyID'),  'User')]",
        "VMPassword": "[ parameters('VMPassword')]",
        "nsgName": "[concat(variables('VMName'), '-nic-nsg')]",
        "pipName": "[concat(variables('VMName'), '-nic-pip')]",
        "nicName": "[concat(variables('VMName'), '-nic')]",
        "VMSize": "Standard_A4_v2",
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "OSVersion": "2016-Datacenter",
        "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('VNetName'), variables('subnetName'))]",
        "ScriptStorageAccount": "vdcworkshop",
        "_artifactsLocation": "[concat('https://',variables('ScriptStorageAccount'),'.blob.core.windows.net/scripts')]",
        "_artifactsLocationSasToken": "",
        "scriptFolder": ".",
        "scriptFileName": "AllowICMPv4.ps1",
        "scriptParameters": "[concat('-artifactsLocation ', variables('_artifactsLocation'), ' -artifactsLocationSasToken \"', variables('_artifactsLocationSasToken'), '\" -folderName ', variables('scriptFolder'))]"
  },
  "resources": [
        {
            "apiVersion": "2018-06-01",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsgName')]",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "myNSGRuleRDP",
                        "properties": {
                            "description": "allow RDP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "comments": "Public IP address of the VM",
            "apiVersion": "2018-06-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('pipName')]",
            "location": "[variables('location')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            }
        },
        {
            "comments": "NIC of the VM",
            "apiVersion": "2018-06-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('pipName') )]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ],
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                }
            }
        },
        {
            "comments": "spin up the VM",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('VMName')]",
            "apiVersion": "2018-06-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName')  )]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('VMSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('VMName')]",
                    "adminUsername": "[variables('VMUserName')]",
                    "adminPassword": "[variables('VMPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('OSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName') )]"
                        }
                    ]
                }
            }
        },
        {
            "comments": "Custom script extension to allow ICMP",
            "name": "[concat(variables('VMName'),'-CustomScriptExtension')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "location": "[variables('location')]",
            "apiVersion": "2018-06-01",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', variables('VMName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.9",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                       "[concat(variables('_artifactsLocation'), '/', variables('ScriptFolder'), '/', variables('ScriptFileName'), variables('_artifactsLocationSasToken'))]"
                    ],
                   "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('scriptFolder'), '/', variables('scriptFileName'), ' ', variables('scriptParameters'))]"
            }
          }
        }
      ]
}