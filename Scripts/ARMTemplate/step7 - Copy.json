{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "CompanyID": {
            "type": "string",
            "metadata": {
                "description": "numeric identification of company"
            }
        },
        "VMPassword": {
            "type": "securestring",
            "metadata": {
                "description": "password of administrator VM"
            }
        }
    },
    "variables": {
        "CompanyID": "[parameters('CompanyID')]",
        "ResourceGroup": "[resourceGroup().name]",
        "location": "[resourceGroup().location]",
        "VMUserName": "[concat('Company', variables('CompanyID'),  'User')]",
        "VMPassword": "[ parameters('VMPassword')]",
        "IPSecondOctet": "10",
        "IPThirdOctet": "[concat('1' , padLeft(variables('CompanyID'), 2, '0'))]",
        "VNetHubName": "Hub01-VNet01",
        "HubLBIP": "[concat('10.', variables('IPSecondOctet'),'.', variables('IPThirdOctet'),'.30')]",
        "VMSize": "Standard_A2_v2",
        "VMNamePrefix": "Hub01-FW",
        "Subnet1HubName": "Tenant",
        "Subnet2HubName": "Firewall",
        "nsgName": "[concat(variables('VMNamePrefix'), '-nic-nsg')]",
        "availabilitySetName": "[concat(variables('VMNamePrefix'),'-as')]",
        "imagePublisher": "OpenLogic",
        "imageOffer": "CentOS",
        "OSVersion": "7.5",
        "InstanceCount": 2,
        "ExtensionName": "BuildFW",
        "ScriptStorageAccount": "vdcworkshop",
        "_artifactsLocation": "[concat('https://',variables('ScriptStorageAccount'),'.blob.core.windows.net/scripts')]",
        "scriptFolder": ".",
        "scriptFileName": "FWBuild.sh",
        "scriptParameters": "",
        "lbName": "[concat(variables('VMNamePrefix'), '-lb')]",
        "lbFrontEndConfigName": "LB-Frontend",
        "lbSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('VNetHubName'), variables('Subnet2HubName'))]",
        "lbFrontEndIP": "[variables('HubLBIP')]",
        "lbBackEndAddressPoolName": "LB-Backend",
        "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbName'))]",
        "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/','LoadBalancerFrontEnd')]",
        "lbprobeName": "HealthProbe"
        //        "lbPoolID": "[concat(variables('lbID'),'/backendAddressPools/','BackendPool')]",
        //        "lbProbeID": "[concat(variables('lbID'),'/probes/tcpProbe')]",
    },
    "resources": [
        {
            "apiVersion": "2018-06-01",
            "name": "[variables('lbName')]",
            "type": "Microsoft.Network/loadBalancers",
            "location": "[variables('location')]",
            "dependsOn": [],
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('lbFrontEndConfigName')]",
                        "properties": {
                            "subnet": {
                                "id": "[variables('lbSubnetRef')]"
                            },
                            "privateIPAddress": "[variables('lbFrontEndIP')]",
                            "privateIPAllocationMethod": "Static"
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('lbBackEndAddressPoolName')]"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbName')), '/frontendIpConfigurations/',variables('lbFrontEndConfigName'))]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbName')), '/backendAddressPools/',variables('lbBackEndAddressPoolName'))]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbName')), '/probes/',variables('lbprobeName') )]"
                            },
                            "protocol": "All",
                            "frontendPort": 0,
                            "backendPort": 0,
                            "loadDistribution": "Default",
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4
                        },
                        "name": "HAPortsRule"
                    }
                ],
                "probes": [
                    {
                        "name": "[variables('lbprobeName')]",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 80,
                            "intervalInSeconds": 15,
                            "numberOfProbes": 2
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2018-06-01",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsgName')]",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "myNSGRuleSSH",
                        "properties": {
                            "description": "allow RDP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2018-06-01",
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('availabilitySetName')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "platformFaultDomainCount": 2,
                "platformUpdateDomainCount": 2
            }
        },
        {
            "apiVersion": "2018-06-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat( variables('VMNamePrefix'), padLeft(copyIndex(1), 2, '0' ),'-nic' )]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName') )]",
                "[resourceId('Microsoft.Network/loadBalancers', variables('lbName') )]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('VNetHubName'), variables('Subnet2HubName')  )]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(variables('lbID'), '/backendAddressPools/', variables('lbBackEndAddressPoolName') )]"
                                }
                            ]
                        }
                    }
                ],
                "enableIPForwarding": true,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName') )]"
                }
            },
            "copy": {
                "name": "nicCopy",
                "count": "[variables('InstanceCount')]"
            }
        },
        {
            "comments": "spin up the VM",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat( variables('VMNamePrefix'), padLeft(copyIndex(1), 2, '0' ) )]",
            "apiVersion": "2018-06-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat( variables('VMNamePrefix'), padLeft(copyIndex(1), 2, '0' ),'-nic' )  )]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[variables('VMSize')]"
                },
                "osProfile": {
                    "computerName": "[concat( variables('VMNamePrefix'), padLeft(copyIndex(1), 2, '0' ) )]",
                    "adminUsername": "[variables('VMUserName')]",
                    "adminPassword": "[variables('VMPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('OSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat( variables('VMNamePrefix'), padLeft(copyIndex(1), 2, '0' ),'-nic' ) )]"
                        }
                    ]
                }
            },
            "copy": {
                "name": "vmCopy",
                "count": "[variables('InstanceCount')]"
            }
        }
    ]
}